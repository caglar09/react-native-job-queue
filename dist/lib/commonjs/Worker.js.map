{"version":3,"names":["_reactNative","require","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","CANCEL","exports","Worker","constructor","name","executer","options","onStart","job","onSuccess","onFailure","error","onCompletion","concurrency","executionCount","isBusy","availableExecuters","execute","rawJob","timeout","payload","JSON","parse","AppState","currentState","executeWithTimeout","id","cancel","promise","Promise","resolve","reject","timeoutPromise","setTimeout","Error","executerPromise","race","triggerSuccess","triggerFailure","triggerCompletion","decreaseExecutionCount"],"sources":["Worker.ts"],"sourcesContent":["import { AppState } from 'react-native';\nimport { Job, RawJob } from './models/Job';\n\nexport const CANCEL = 'rn_job_queue_cancel';\n\nexport interface WorkerOptions<P extends object> {\n    onStart?: (job: Job<P>) => void;\n    onSuccess?: (job: Job<P>) => void;\n    onFailure?: (job: Job<P>, error: Error) => void;\n    onCompletion?: (job: Job<P>) => void;\n    concurrency?: number;\n}\n\nexport interface CancellablePromise<T> extends Promise<T> {\n    rn_job_queue_cancel?: (error?: Error) => void;\n}\n/**\n * @typeparam P specifies the Type of the Job-Payload.\n */\nexport class Worker<P extends object> {\n    public readonly name: string;\n    public readonly concurrency: number;\n\n    private executionCount: number;\n    private executer: (payload: P, id: string) => CancellablePromise<any>;\n\n    private onStart: (job: Job<P>) => void;\n    private onSuccess: (job: Job<P>) => void;\n    private onFailure: (job: Job<P>, error: Error) => void;\n    private onCompletion: (job: Job<P>) => void;\n\n    /**\n     *\n     * @typeparam P specifies the type of the job-payload.\n     * @param name of worker\n     * @param executer function to run jobs\n     * @param options to configure worker\n     */\n    constructor(name: string, executer: (payload: P, id: string) => Promise<any>, options: WorkerOptions<P> = {}) {\n        const {\n            onStart = (job: Job<P>) => { },\n            onSuccess = (job: Job<P>) => { },\n            onFailure = (job: Job<P>, error: Error) => { },\n            onCompletion = (job: Job<P>) => { },\n            concurrency = 5,\n        } = options;\n\n        this.name = name;\n        this.concurrency = concurrency;\n\n        this.executionCount = 0;\n        this.executer = executer;\n\n        this.onStart = onStart;\n        this.onSuccess = onSuccess;\n        this.onFailure = onFailure;\n        this.onCompletion = onCompletion;\n    }\n\n    /**\n     * @returns true if worker runs max concurrent amout of jobs\n     */\n    get isBusy() {\n        return this.executionCount === this.concurrency;\n    }\n    /**\n     * @returns amount of available Executers for current worker\n     */\n    get availableExecuters() {\n        return this.concurrency - this.executionCount;\n    }\n    /**\n     * This method should not be invoked manually and is used by the queue to execute jobs\n     * @param job to be executed\n     */\n    execute(rawJob: RawJob) {\n        const { timeout } = rawJob;\n        const payload: P = JSON.parse(rawJob.payload);\n        const job = { ...rawJob, ...{ payload } };\n        this.executionCount++;\n        this.onStart(job);\n        if (timeout > 0 && AppState.currentState === 'active') {\n            return this.executeWithTimeout(job, timeout);\n        } else {\n            return this.executer(payload, job.id);\n        }\n    }\n    private executeWithTimeout(job: Job<P>, timeout: number) {\n        let cancel;\n        const promise: CancellablePromise<any> = new Promise(async (resolve, reject) => {\n            const timeoutPromise = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error(`Job ${job.id} timed out`));\n                }, timeout);\n            });\n            const executerPromise = this.executer(job.payload, job.id);\n            if (executerPromise) {\n                cancel = executerPromise[CANCEL];\n                try {\n                    await Promise.race([timeoutPromise, executerPromise]);\n                    resolve(true);\n                } catch (error) {\n                    // cancel task if has cancel method\n                    if (executerPromise[CANCEL] && typeof executerPromise[CANCEL] === 'function') {\n                        executerPromise[CANCEL]!();\n                    }\n                    reject(error);\n                }\n            }\n        });\n        promise[CANCEL] = cancel;\n        return promise;\n    }\n\n    triggerSuccess(job: Job<P>) {\n        this.onSuccess(job);\n    }\n    triggerFailure(job: Job<P>, error: Error) {\n        this.onFailure(job, error);\n    }\n    triggerCompletion(job: Job<P>) {\n        this.onCompletion(job);\n    }\n    decreaseExecutionCount() {\n        this.executionCount--;\n    }\n}\n"],"mappings":"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","ignoreList":[]}